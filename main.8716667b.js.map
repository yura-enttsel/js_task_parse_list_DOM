{"version":3,"sources":["scripts/main.js"],"names":["listOfEmpoyees","document","querySelector","itemsOfEmployees","querySelectorAll","toMakeNumber","param","Number","split","filter","val","isNaN","join","sortList","items","list","sort","a","b","dataset","salary","forEach","item","append","getEmployees","employees","push","name","innerText","position","age"],"mappings":";AAAA,aAgCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA9BA,IAAMA,EAAiBC,SAASC,cAAc,MACxCC,EAAmBF,SAASG,iBAAiB,MAEnD,SAASC,EAAaC,GACbC,OAAAA,OAAOD,EAAME,MAAM,IAAIC,OAAO,SAAAC,GAAO,OAACC,MAAMD,KAAME,KAAK,KAGhE,SAASC,EAASC,EAAOC,GACnBD,EAAAA,GACDE,KAAK,SAACC,EAAGC,GACRb,OAAAA,EAAaa,EAAEC,QAAQC,QAAUf,EAAaY,EAAEE,QAAQC,UACzDC,QAAQ,SAAAC,GAAQP,OAAAA,EAAKQ,OAAOD,KAGjC,SAASE,EAAaV,GACdW,IAAAA,EAAY,GAWXA,OATHX,EAAAA,GAAOO,QAAQ,SAAAC,GAAQG,OAAAA,EAAUC,KACnC,CACEC,KAAML,EAAKM,UACXC,SAAUP,EAAKH,QAAQU,SACvBT,OAAQE,EAAKH,QAAQC,OACrBU,IAAKR,EAAKH,QAAQW,QAIfL,EAGTZ,EAASV,EAAkBH,GAC3BwB,EAAarB","file":"main.8716667b.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listOfEmpoyees = document.querySelector('ul');\nconst itemsOfEmployees = document.querySelectorAll('li');\n\nfunction toMakeNumber(param) {\n  return Number(param.split('').filter(val => !isNaN(val)).join(''));\n}\n\nfunction sortList(items, list) {\n  [...items]\n    .sort((a, b) =>\n      toMakeNumber(b.dataset.salary) - toMakeNumber(a.dataset.salary))\n    .forEach(item => list.append(item));\n}\n\nfunction getEmployees(items) {\n  const employees = [];\n\n  [...items].forEach(item => employees.push(\n    {\n      name: item.innerText,\n      position: item.dataset.position,\n      salary: item.dataset.salary,\n      age: item.dataset.age,\n    }\n  ));\n\n  return employees;\n}\n\nsortList(itemsOfEmployees, listOfEmpoyees);\ngetEmployees(itemsOfEmployees);\n"]}